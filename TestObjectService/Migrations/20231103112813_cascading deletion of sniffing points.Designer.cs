// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestObjectService.Data;

#nullable disable

namespace TestObjectService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231103112813_cascading deletion of sniffing points")]
    partial class cascadingdeletionofsniffingpoints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestObjectService.Models.SniffingPoint", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TestObjectId");

                    b.ToTable("SniffingPoint");
                });

            modelBuilder.Entity("TestObjectService.Models.TestObject", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestObjects");
                });

            modelBuilder.Entity("TestObjectService.Models.SniffingPoint", b =>
                {
                    b.HasOne("TestObjectService.Models.TestObject", null)
                        .WithMany("SniffingPoints")
                        .HasForeignKey("TestObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TestObjectService.Models.TestObject", b =>
                {
                    b.Navigation("SniffingPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
